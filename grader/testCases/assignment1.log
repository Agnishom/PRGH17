l1 = [124150571,
 302445223,
 373760411,
 326840837,
 328019039,
 934720793,
 995611187,
 236140339,
 518412413,
 575932249,
 1024447751]
l2 = [1062240579,
  71214519,
  809761416,
  1058213535,
  1025555888,
  916220741,
  508125562,
  325735367,
  410220085]

answerPrimes = replicate 11 True ++ replicate 9 False

isPrimeCorrectness = map isPrime (l1 ++ l2) == answerPrimes

goldbachData = [560225228,
 546534314,
 641444972,
 638879490,
 172643660,
 575614474,
 827096192,
 363275326,
 767563944,
 205131158]

goldbachCorrectness = and $ map (\(x, y) -> x <= y && isPrime x && isPrime y) $ map goldbachPartition goldbachData

isPerfectData = [2, 6, 28, 15, 8128]
isPerfectAnswers = [False, True, True, False, True]
isPerfectCorrectness = isPerfectAnswers == (map isPerfect isPerfectData)

nextPerfectData = [1..10] ++ [200, 300]
nextPerfectAnswers = [6,6,6,6,6,28,28,28,28,28,496,496]
nextPerfectCorrectness = nextPerfectAnswers == (map nextPerfect nextPerfectData)

allCycleData1 = [['a','b','k','l','a']]
allCycleData2 = ["asadwefv", "afef", "afcwf", "afewf", "verve", "ewwe"]
allCycleData3 = [[1..3], [30, 32..72]]
allCycleDataAnswer1 = [["abkla","bklaa","klaab","laabk","aabkl"]]
allCycleDataAnswer2 = [["asadwefv","sadwefva","adwefvas","dwefvasa","wefvasad","efvasadw","fvasadwe","vasadwef"],["afef","fefa","efaf","fafe"],["afcwf","fcwfa","cwfaf","wfafc","fafcw"],["afewf","fewfa","ewfaf","wfafe","fafew"],["verve","ervev","rveve","vever","everv"],["ewwe","wwee","weew","eeww"]]
allCycleDataAnswer3 = [[[1,2,3],[2,3,1],[3,1,2]],[[30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72],[32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,30],[34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,30,32],[36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,30,32,34],[38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,30,32,34,36],[40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,30,32,34,36,38],[42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,30,32,34,36,38,40],[44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,30,32,34,36,38,40,42],[46,48,50,52,54,56,58,60,62,64,66,68,70,72,30,32,34,36,38,40,42,44],[48,50,52,54,56,58,60,62,64,66,68,70,72,30,32,34,36,38,40,42,44,46],[50,52,54,56,58,60,62,64,66,68,70,72,30,32,34,36,38,40,42,44,46,48],[52,54,56,58,60,62,64,66,68,70,72,30,32,34,36,38,40,42,44,46,48,50],[54,56,58,60,62,64,66,68,70,72,30,32,34,36,38,40,42,44,46,48,50,52],[56,58,60,62,64,66,68,70,72,30,32,34,36,38,40,42,44,46,48,50,52,54],[58,60,62,64,66,68,70,72,30,32,34,36,38,40,42,44,46,48,50,52,54,56],[60,62,64,66,68,70,72,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58],[62,64,66,68,70,72,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60],[64,66,68,70,72,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62],[66,68,70,72,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64],[68,70,72,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66],[70,72,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68],[72,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70]]]
allCyclesCorrectness = (allCycleDataAnswer3 == map allCycles allCycleData3) && (allCycleDataAnswer2 == map allCycles allCycleData2) && (allCycleDataAnswer1 == map allCycles allCycleData1)

collatzData = [354, 58, 693, 713, 69, 128, 565, 963, 804, 240]
collatzAnswer = [[354,177,532,266,133,400,200,100,50,25,76,38,19,58,29,88,44,22,11,34,17,52,26,13,40,20,10,5,16,8,4,2,1],[58,29,88,44,22,11,34,17,52,26,13,40,20,10,5,16,8,4,2,1],[693,2080,1040,520,260,130,65,196,98,49,148,74,37,112,56,28,14,7,22,11,34,17,52,26,13,40,20,10,5,16,8,4,2,1],[713,2140,1070,535,1606,803,2410,1205,3616,1808,904,452,226,113,340,170,85,256,128,64,32,16,8,4,2,1],[69,208,104,52,26,13,40,20,10,5,16,8,4,2,1],[128,64,32,16,8,4,2,1],[565,1696,848,424,212,106,53,160,80,40,20,10,5,16,8,4,2,1],[963,2890,1445,4336,2168,1084,542,271,814,407,1222,611,1834,917,2752,1376,688,344,172,86,43,130,65,196,98,49,148,74,37,112,56,28,14,7,22,11,34,17,52,26,13,40,20,10,5,16,8,4,2,1],[804,402,201,604,302,151,454,227,682,341,1024,512,256,128,64,32,16,8,4,2,1],[240,120,60,30,15,46,23,70,35,106,53,160,80,40,20,10,5,16,8,4,2,1]]
collatzCorrectness = map collatz collatzData == collatzAnswer

connectedData = [[], [(0, 1)], [(0, 1),(1, 2),(2, 3)], [(0,1), (2, 3)], [(10, 10), (10, 10), (10, 10), (10, 10), (10, 20)], [(10, 10), (10, 10), (10, 10), (10, 10), (20, 20)]]
connectedAnswer = [True,True,False,True,False,False]
connectedCorrectness = map connected connectedData == connectedAnswer

main = print (isPrimeCorrectness && goldbachCorrectness && collatzCorrectness && allCyclesCorrectness && isPerfectCorrectness && nextPerfectCorrectness && connectedCorrectness)
