quicksort :: (Ord a) => [a] -> [a]  
quicksort [] = []  
quicksort (x:xs) =   
     let smallerSorted = quicksort [a | a <- xs, a <= x]  
         biggerSorted = quicksort [a | a <- xs, a > x]  
     in  smallerSorted ++ [x] ++ biggerSorted  



maxConsecutiveData1 = [895083,712942,259626,551069,912436,41839,910336,436607,897586,749632]
maxConsecutiveData2 = [688775,915586,474104,630556,430115,478936,874846,496810,410335,809605,663980,412248,835597,950256,422207]
maxConsecutiveData3 = [649702,435268,218549,723878,203015,289379,875317,288422,417621,32992,411858,505724,757441,667552,758000,530894,628154,543309,736005,190432]
maxConsecutiveData4 =  [768430,470953,294028,595037,724964,716242,790713,403962,40359,917330,589774,466910,305523,579610,660243,803387,378034,828671,466808,300111,301095,295821,684849,946892,319752]
maxConsecutiveData5 = [10,0,20,0,30,0,40] 

maxConsecutiveCorrectness = (maxConsecutive maxConsecutiveData1 5 == 3331156)
                         && (maxConsecutive maxConsecutiveData2 14 == 9071749)
                         && (maxConsecutive maxConsecutiveData3 13 == 7153289)
                         && (maxConsecutive maxConsecutiveData4 18 == 10334170)
                         && (maxConsecutive maxConsecutiveData1 0 == 0)
                         && (maxConsecutive maxConsecutiveData1 1 == maximum maxConsecutiveData1)
                         && (maxConsecutive maxConsecutiveData5 3 == 70)

chooseData1 = [[1,2,3,4],[1,2,3,5],[1,2,3,6],[1,2,3,7],[1,2,3,8],[1,2,3,9],[1,2,4,5],[1,2,4,6],[1,2,4,7],[1,2,4,8],[1,2,4,9],[1,2,5,6],[1,2,5,7],[1,2,5,8],[1,2,5,9],[1,2,6,7],[1,2,6,8],[1,2,6,9],[1,2,7,8],[1,2,7,9],[1,2,8,9],[1,3,4,5],[1,3,4,6],[1,3,4,7],[1,3,4,8],[1,3,4,9],[1,3,5,6],[1,3,5,7],[1,3,5,8],[1,3,5,9],[1,3,6,7],[1,3,6,8],[1,3,6,9],[1,3,7,8],[1,3,7,9],[1,3,8,9],[1,4,5,6],[1,4,5,7],[1,4,5,8],[1,4,5,9],[1,4,6,7],[1,4,6,8],[1,4,6,9],[1,4,7,8],[1,4,7,9],[1,4,8,9],[1,5,6,7],[1,5,6,8],[1,5,6,9],[1,5,7,8],[1,5,7,9],[1,5,8,9],[1,6,7,8],[1,6,7,9],[1,6,8,9],[1,7,8,9],[2,3,4,5],[2,3,4,6],[2,3,4,7],[2,3,4,8],[2,3,4,9],[2,3,5,6],[2,3,5,7],[2,3,5,8],[2,3,5,9],[2,3,6,7],[2,3,6,8],[2,3,6,9],[2,3,7,8],[2,3,7,9],[2,3,8,9],[2,4,5,6],[2,4,5,7],[2,4,5,8],[2,4,5,9],[2,4,6,7],[2,4,6,8],[2,4,6,9],[2,4,7,8],[2,4,7,9],[2,4,8,9],[2,5,6,7],[2,5,6,8],[2,5,6,9],[2,5,7,8],[2,5,7,9],[2,5,8,9],[2,6,7,8],[2,6,7,9],[2,6,8,9],[2,7,8,9],[3,4,5,6],[3,4,5,7],[3,4,5,8],[3,4,5,9],[3,4,6,7],[3,4,6,8],[3,4,6,9],[3,4,7,8],[3,4,7,9],[3,4,8,9],[3,5,6,7],[3,5,6,8],[3,5,6,9],[3,5,7,8],[3,5,7,9],[3,5,8,9],[3,6,7,8],[3,6,7,9],[3,6,8,9],[3,7,8,9],[4,5,6,7],[4,5,6,8],[4,5,6,9],[4,5,7,8],[4,5,7,9],[4,5,8,9],[4,6,7,8],[4,6,7,9],[4,6,8,9],[4,7,8,9],[5,6,7,8],[5,6,7,9],[5,6,8,9],[5,7,8,9],[6,7,8,9]]
chooseData2 = [[1,2,3]]
chooseData3 = [[1,2],[1,3],[2,3]]
chooseData4 = [[1],[2],[3]]
chooseData5 = [[]]
chooseData6 = []
chooseCorrectness = (chooseData1 == choose 9 4) &&
                    (choose 3 3 == chooseData2) &&
                    (choose 3 2 == chooseData3) &&
                    (choose 3 1 == chooseData4) &&
                    (choose 3 0 == chooseData5) &&
                    (choose 0 3 == chooseData6) &&
                    ((choose 0 0  == chooseData5) || (choose 0 0  == chooseData6))

goldbachVerifyCorrectness = ((False, 0, 0) == goldbachVerify 5777) &&
                            ((False, 0, 0) == goldbachVerify 5993) &&
                            ((False, -1, -1) == goldbachVerify 5000) &&
                            ((False, -1, -1) == goldbachVerify 5003) &&
                            ((False, -1, -1) == goldbachVerify 1) &&
                            ((False, -1, -1) == goldbachVerify 0)

selectLeaderCorrectness = (selectLeader 5 2 == 2)
                       && (selectLeader 100 5 == 43)
                       && (selectLeader 43 18 == 2)
                       && (selectLeader 16 4 == 14)
                       && (selectLeader 96 6 == 39)
                       && (selectLeader 96 10 == 75)
                       && (selectLeader 10 1 == 10)


selectLeader'Data1 = [[1,2,3,4,5],[3,4,5,2],[5,2,4],[4,2],[2]]
selectLeader'Data2 = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],[37,38,39,40,41,42,43,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],[13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,2,3,4,5,6,7,8,9,10,11,12],[32,33,34,35,36,38,39,40,41,42,43,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31],[9,10,11,12,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,2,3,4,5,6,7,8],[29,30,31,33,34,35,36,38,39,40,41,42,43,2,3,4,5,6,7,8,10,11,12,14,15,16,17,18,20,21,22,23,24,25,26,27,28],[7,8,10,11,12,14,15,16,17,18,20,21,22,23,24,25,26,27,28,30,31,33,34,35,36,38,39,40,41,42,43,2,3,4,5,6],[28,30,31,33,34,35,36,38,39,40,41,42,43,2,3,4,5,6,8,10,11,12,14,15,16,17,18,20,21,22,23,24,25,26,27],[8,10,11,12,14,15,16,17,18,20,21,22,23,24,25,26,27,30,31,33,34,35,36,38,39,40,41,42,43,2,3,4,5,6],[31,33,34,35,36,38,39,40,41,42,43,2,3,4,5,6,10,11,12,14,15,16,17,18,20,21,22,23,24,25,26,27,30],[12,14,15,16,17,18,20,21,22,23,24,25,26,27,30,33,34,35,36,38,39,40,41,42,43,2,3,4,5,6,10,11],[36,38,39,40,41,42,43,2,3,4,5,6,10,11,14,15,16,17,18,20,21,22,23,24,25,26,27,30,33,34,35],[18,20,21,22,23,24,25,26,27,30,33,34,35,38,39,40,41,42,43,2,3,4,5,6,10,11,14,15,16,17],[43,2,3,4,5,6,10,11,14,15,16,17,20,21,22,23,24,25,26,27,30,33,34,35,38,39,40,41,42],[26,27,30,33,34,35,38,39,40,41,42,2,3,4,5,6,10,11,14,15,16,17,20,21,22,23,24,25],[14,15,16,17,20,21,22,23,24,25,27,30,33,34,35,38,39,40,41,42,2,3,4,5,6,10,11],[41,42,2,3,4,5,6,10,11,15,16,17,20,21,22,23,24,25,27,30,33,34,35,38,39,40],[27,30,33,34,35,38,39,40,42,2,3,4,5,6,10,11,15,16,17,20,21,22,23,24,25],[17,20,21,22,23,24,25,30,33,34,35,38,39,40,42,2,3,4,5,6,10,11,15,16],[5,6,10,11,15,16,20,21,22,23,24,25,30,33,34,35,38,39,40,42,2,3,4],[40,42,2,3,4,6,10,11,15,16,20,21,22,23,24,25,30,33,34,35,38,39],[34,35,38,39,42,2,3,4,6,10,11,15,16,20,21,22,23,24,25,30,33],[25,30,33,35,38,39,42,2,3,4,6,10,11,15,16,20,21,22,23,24],[23,24,30,33,35,38,39,42,2,3,4,6,10,11,15,16,20,21,22],[22,24,30,33,35,38,39,42,2,3,4,6,10,11,15,16,20,21],[24,30,33,35,38,39,42,2,3,4,6,10,11,15,16,20,21],[33,35,38,39,42,2,3,4,6,10,11,15,16,20,21,30],[39,42,2,3,4,6,10,11,15,16,20,21,30,35,38],[4,6,10,11,15,16,20,21,30,35,38,42,2,3],[16,20,21,30,35,38,42,2,3,6,10,11,15],[42,2,3,6,10,11,15,20,21,30,35,38],[20,21,30,35,38,2,3,6,10,11,15],[10,11,15,21,30,35,38,2,3,6],[6,11,15,21,30,35,38,2,3],[15,21,30,35,38,2,3,11],[38,2,3,11,21,30,35],[35,2,3,11,21,30],[11,21,30,2,3],[30,2,3,21],[21,2,3],[3,2],[2]]
selectLeader'Data3 = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],[5,6,7,8,9,10,11,12,13,14,15,16,2,3,4],[9,10,11,12,13,14,15,16,2,3,4,6,7,8],[13,14,15,16,2,3,4,6,7,8,10,11,12],[2,3,4,6,7,8,10,11,12,14,15,16],[7,8,10,11,12,14,15,16,3,4,6],[12,14,15,16,3,4,6,8,10,11],[3,4,6,8,10,11,14,15,16],[10,11,14,15,16,4,6,8],[16,4,6,8,11,14,15],[11,14,15,4,6,8],[6,8,14,15,4],[4,8,14,15],[8,14,15],[15,14],[14]]
selectLeader'Data4 = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],[11,12,13,14,15,16,17,18,19,20,2,3,4,5,6,7,8,9,10],[2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20],[13,14,15,16,17,18,19,20,3,4,5,6,7,8,9,10,12],[5,6,7,8,9,10,12,14,15,16,17,18,19,20,3,4],[17,18,19,20,3,4,6,7,8,9,10,12,14,15,16],[10,12,14,15,16,18,19,20,3,4,6,7,8,9],[6,7,8,9,12,14,15,16,18,19,20,3,4],[20,3,4,7,8,9,12,14,15,16,18,19],[18,19,3,4,7,8,9,12,14,15,16],[16,19,3,4,7,8,9,12,14,15],[19,3,4,7,8,9,12,14,15],[4,7,8,9,12,14,15,3],[9,12,14,15,3,7,8],[3,7,8,12,14,15],[15,7,8,12,14],[8,12,14,7],[12,14,7],[7,14],[14]]
selectLeader'Data5 = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,2,3,4],[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,2,3,4,6,7,8],[13,14,15,16,17,18,19,20,21,22,23,24,2,3,4,6,7,8,10,11,12],[17,18,19,20,21,22,23,24,2,3,4,6,7,8,10,11,12,14,15,16],[21,22,23,24,2,3,4,6,7,8,10,11,12,14,15,16,18,19,20],[2,3,4,6,7,8,10,11,12,14,15,16,18,19,20,22,23,24],[7,8,10,11,12,14,15,16,18,19,20,22,23,24,3,4,6],[12,14,15,16,18,19,20,22,23,24,3,4,6,8,10,11],[18,19,20,22,23,24,3,4,6,8,10,11,14,15,16],[23,24,3,4,6,8,10,11,14,15,16,19,20,22],[6,8,10,11,14,15,16,19,20,22,24,3,4],[14,15,16,19,20,22,24,3,4,8,10,11],[20,22,24,3,4,8,10,11,15,16,19],[4,8,10,11,15,16,19,22,24,3],[15,16,19,22,24,3,8,10,11],[24,3,8,10,11,16,19,22],[11,16,19,22,3,8,10],[3,8,10,16,19,22],[19,22,8,10,16],[16,22,8,10],[22,8,10],[10,8],[8]]
selectLeader'Data6 = [[1,2,3,4,5,6,7,8,9,10],[2,3,4,5,6,7,8,9,10],[3,4,5,6,7,8,9,10],[4,5,6,7,8,9,10],[5,6,7,8,9,10],[6,7,8,9,10],[7,8,9,10],[8,9,10],[9,10],[10]]

selectLeader'Correctness = (map quicksort selectLeader'Data1 == map quicksort (selectLeader' 5 2))
                        && (map quicksort selectLeader'Data2 == map quicksort (selectLeader' 43 18))
                        && (map quicksort selectLeader'Data3 == map quicksort (selectLeader' 16 4))
                        && (map quicksort selectLeader'Data4 == map quicksort (selectLeader' 20 10))
                        && (map quicksort selectLeader'Data5 == map quicksort (selectLeader' 24 4))
                        && (map quicksort selectLeader'Data6 == map quicksort (selectLeader' 10 1))

main = do
    if maxConsecutiveCorrectness
    then putStrLn "maxConsecutive correct"
    else putStrLn "maxConsecutive incorrect"
    if chooseCorrectness
    then putStrLn "choose correct"
    else putStrLn "choose incorrect"
    if selectLeaderCorrectness
    then putStrLn "selectLeader correct"
    else putStrLn "selectLeader incorrect"
    if selectLeader'Correctness
    then putStrLn "selectLeader' correct"
    else putStrLn "selectLeader' incorrect"

    if goldbachVerifyCorrectness && b == True && xs == n
    then putStrLn "goldbachVerify correct"
    else putStrLn "goldbachVerify incorrect"
    where
        n = [1001, 1003, 1005, 1007]
        l = map goldbachVerify n
        b = and $ map (\(x,_,_) -> x) l
        xs = map (\(_, p, k) -> p + 2*k*k) l
